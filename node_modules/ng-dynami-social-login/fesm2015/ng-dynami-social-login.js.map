{"version":3,"file":"ng-dynami-social-login.js.map","sources":["ng://ng-dynami-social-login/lib/dynami-social-login/models/base.login.provider.ts","ng://ng-dynami-social-login/lib/dynami-social-login/models/linkedin.response.model.ts","ng://ng-dynami-social-login/lib/dynami-social-login/models/login.provider.class.model.ts","ng://ng-dynami-social-login/lib/dynami-social-login/models/social.user.model.ts","ng://ng-dynami-social-login/lib/dynami-social-login/providers/facebook.login.provider.ts","ng://ng-dynami-social-login/lib/dynami-social-login/providers/google.login.provider.ts","ng://ng-dynami-social-login/lib/dynami-social-login/providers/linkedin.login.provider.ts","ng://ng-dynami-social-login/lib/dynami-social-login/services/auth.service.config.ts","ng://ng-dynami-social-login/lib/dynami-social-login/services/auth.service.ts","ng://ng-dynami-social-login/lib/dynami-social-login/dynami-social-login.module.ts"],"sourcesContent":["import { SocialUserModel } from \"./social.user.model\";\r\nimport { LoginProvider } from \"./login.provider\";\r\nimport { LoginProviderClassModel } from \"./login.provider.class.model\";\r\n\r\n\r\nexport abstract class BaseLoginProvider implements LoginProvider {\r\n  constructor() {}\r\n\r\n  abstract initialize(): Promise<SocialUserModel>;\r\n  abstract signIn(): Promise<SocialUserModel>;\r\n  abstract signOut(): Promise<any>;\r\n\r\n  loadScript(obj: LoginProviderClassModel, onload: any): void {\r\n    if (document.getElementById(obj.name)) { return; }\r\n    let signInJS = document.createElement('script');\r\n    signInJS.async = true;\r\n    signInJS.src = obj.url;\r\n    signInJS.onload = onload;\r\n    if (obj.name === 'LINKEDIN') {\r\n      signInJS.async = false;\r\n      signInJS.text = ('api_key: ' + obj.id).replace('\\'', '');\r\n    }\r\n    document.head.appendChild(signInJS);\r\n  }\r\n}","export class LinkedInResponseModel {\r\n    emailAddress: string;\r\n    firstName: string;\r\n    id: string;\r\n    lastName: string;\r\n    pictureUrl: string;\r\n  }","export class LoginProviderClassModel {\r\n    name: string;\r\n    id: string;\r\n    url: string;\r\n  }","export class SocialUserModel {\r\n    provider: string;\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    image: string;\r\n    token?: string;\r\n    idToken?: string\r\n  }\r\n  \r\n\r\n  \r\n","import { BaseLoginProvider } from \"../models/base.login.provider\";\r\nimport { LoginProviderClassModel } from \"../models/login.provider.class.model\";\r\nimport { SocialUserModel } from \"../models/social.user.model\";\r\n\r\n\r\ndeclare let FB: any;\r\n\r\nexport class FacebookLoginProvider extends BaseLoginProvider {\r\n\r\n  public static readonly PROVIDER_ID = 'facebook';\r\n  public loginProviderObj: LoginProviderClassModel = new LoginProviderClassModel();\r\n\r\n  constructor(private clientId: string) {\r\n    super();\r\n    this.loginProviderObj.id = clientId;\r\n    this.loginProviderObj.name = 'facebook';\r\n    this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';\r\n  }\r\n\r\n  initialize(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadScript(this.loginProviderObj, () => {\r\n          FB.init({\r\n            appId: this.clientId,\r\n            autoLogAppEvents: true,\r\n            cookie: true,\r\n            xfbml: true,\r\n            version: 'v2.10'\r\n          });\r\n          FB.AppEvents.logPageView();\r\n\r\n          FB.getLoginStatus(function (response: any) {\r\n            if (response.status === 'connected') {\r\n              const accessToken = FB.getAuthResponse()['accessToken'];\r\n              FB.api('/me?fields=name,email,picture', (res: any) => {\r\n                resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\r\n              });\r\n            }\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  static drawUser(response: any): SocialUserModel {\r\n    let user: SocialUserModel = new SocialUserModel();\r\n    user.id = response.id;\r\n    user.name = response.name;\r\n    user.email = response.email;\r\n    user.token = response.token;\r\n    user.image = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';\r\n    return user;\r\n  }\r\n\r\n  signIn(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.login((response: any) => {\r\n        if (response.authResponse) {\r\n          const accessToken = FB.getAuthResponse()['accessToken'];\r\n          FB.api('/me?fields=name,email,picture', (res: any) => {\r\n            resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\r\n          });\r\n        }\r\n      }, { scope: 'email,public_profile' });\r\n    });\r\n  }\r\n\r\n  signOut(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.logout((response: any) => {\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { BaseLoginProvider } from \"../models/base.login.provider\";\r\nimport { LoginProviderClassModel } from \"../models/login.provider.class.model\";\r\nimport { SocialUserModel } from \"../models/social.user.model\";\r\n\r\n\r\ndeclare let gapi: any;\r\n\r\nexport class GoogleLoginProvider extends BaseLoginProvider {\r\n\r\n  public static readonly PROVIDER_ID = 'google';\r\n  public loginProviderObj: LoginProviderClassModel = new LoginProviderClassModel();\r\n  private auth2: any;\r\n\r\n  constructor(private clientId: string) {\r\n    super();\r\n    this.loginProviderObj.id = clientId;\r\n    this.loginProviderObj.name = 'google';\r\n    this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';\r\n  }\r\n\r\n  initialize(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadScript(this.loginProviderObj, () => {\r\n          gapi.load('auth2', () => {\r\n            this.auth2 = gapi.auth2.init({\r\n              client_id: this.clientId,\r\n              scope: 'email'\r\n            });\r\n\r\n            this.auth2.then(() => {\r\n              if (this.auth2.isSignedIn.get()) {\r\n                resolve(this.drawUser());\r\n              }\r\n            });\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  drawUser(): SocialUserModel {\r\n    let user: SocialUserModel = new SocialUserModel();\r\n    let profile = this.auth2.currentUser.get().getBasicProfile();\r\n    let authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);\r\n    user.id = profile.getId();\r\n    user.name = profile.getName();\r\n    user.email = profile.getEmail();\r\n    user.image = profile.getImageUrl();\r\n    user.token = authResponseObj.access_token;\r\n    user.idToken = authResponseObj.id_token;\r\n    return user;\r\n  }\r\n\r\n  signIn(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      let promise = this.auth2.signIn();\r\n      promise.then(() => {\r\n        resolve(this.drawUser());\r\n      });\r\n    });\r\n  }\r\n\r\n  signOut(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth2.signOut().then((err: any) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { BaseLoginProvider } from \"../models/base.login.provider\";\r\nimport { LoginProviderClassModel } from \"../models/login.provider.class.model\";\r\nimport { SocialUserModel } from \"../models/social.user.model\";\r\nimport { LinkedInResponseModel } from \"../models/linkedin.response.model\";\r\n\r\n\r\ndeclare let IN: any;\r\n\r\nexport class LinkedinLoginProvider extends BaseLoginProvider {\r\n\r\n  public static readonly PROVIDER_ID = 'linkedin';\r\n  public loginProviderObj: LoginProviderClassModel = new LoginProviderClassModel();\r\n\r\n  constructor(private clientId: string) {\r\n    super();\r\n    this.loginProviderObj.id = clientId;\r\n    this.loginProviderObj.name = 'linkedin';\r\n    this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';\r\n  }\r\n\r\n  initialize(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadScript(this.loginProviderObj, () => {\r\n          IN.init({\r\n            api_key: this.clientId,\r\n            authorize: true,\r\n            onLoad: this.onLinkedInLoad()\r\n          });\r\n\r\n          IN.Event.on(IN, 'auth', () => {\r\n            if (IN.User.isAuthorized()) {\r\n              IN.API.Raw(\r\n                '/people/~:(id,first-name,last-name,email-address,picture-url)'\r\n              ).result( (res: LinkedInResponseModel) => {\r\n                resolve(this.drawUser(res));\r\n              });\r\n            }\r\n          });\r\n\r\n        });\r\n    });\r\n  }\r\n\r\n  onLinkedInLoad() {\r\n    IN.Event.on(IN, 'systemReady', () => {\r\n      IN.User.refresh();\r\n    });\r\n  }\r\n\r\n  drawUser(response: LinkedInResponseModel): SocialUserModel {\r\n    let user: SocialUserModel = new SocialUserModel();\r\n    user.id = response.emailAddress;\r\n    user.name = response.firstName + ' ' + response.lastName;\r\n    user.email = response.emailAddress;\r\n    user.image = response.pictureUrl;\r\n    user.token = IN.ENV.auth.oauth_token;\r\n    return user;\r\n  }\r\n\r\n  signIn(): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      IN.User.authorize( () => {\r\n        IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result( (res: LinkedInResponseModel) => {\r\n          resolve(this.drawUser(res));\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  signOut(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      IN.User.logout((response: any) => {\r\n        resolve();\r\n      }, (err: any) => {\r\n        reject(err);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { LoginProvider } from \"../models/login.provider\";\r\nimport { AuthServiceConfigItem } from \"./auth.service.config.item\";\r\n\r\nexport class AuthServiceConfig {\r\n    providers: Map<string, LoginProvider> = new Map<string, LoginProvider>();\r\n  \r\n    constructor(providers: AuthServiceConfigItem[]) {\r\n      for (let i = 0; i < providers.length; i++) {\r\n        let element = providers[i];\r\n        this.providers.set(element.id, element.provider);\r\n      }\r\n    }\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { LoginProvider } from \"../models/login.provider\";\r\nimport { SocialUserModel } from \"../models/social.user.model\";\r\nimport { AuthServiceConfig } from \"./auth.service.config\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private static readonly LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\r\n\r\n  private providers: Map<string, LoginProvider>;\r\n\r\n  private _user: SocialUserModel = null;\r\n  private _authState: BehaviorSubject<SocialUserModel> = new BehaviorSubject(null);\r\n\r\n  get authState(): Observable<SocialUserModel> {\r\n    return this._authState.asObservable();\r\n  }\r\n\r\n  constructor(config: AuthServiceConfig) {\r\n    this.providers = config.providers;\r\n    this.providers.forEach((provider: LoginProvider, key: string) => {\r\n      provider.initialize().then((user: SocialUserModel) => {\r\n        user.provider = key;\r\n        this._user = user;\r\n        this._authState.next(user);\r\n      }).catch((err) => {\r\n        // this._authState.next(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  signIn(providerId: string): Promise<SocialUserModel> {\r\n    return new Promise((resolve, reject) => {\r\n      let providerObject = this.providers.get(providerId);\r\n      if (providerObject) {\r\n        providerObject.signIn().then((user: SocialUserModel) => {\r\n          user.provider = providerId;\r\n          resolve(user);\r\n          this._user = user;\r\n          this._authState.next(user);\r\n        });\r\n      } else {\r\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\r\n      }\r\n    });\r\n  }\r\n\r\n  signOut(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._user && this._user.provider) {\r\n        let providerId = this._user.provider;\r\n        let providerObject = this.providers.get(providerId);\r\n        providerObject.signOut().then(() => {\r\n          this._user = null;\r\n          this._authState.next(null);\r\n          resolve();\r\n        }).catch((err) => {\r\n          this._authState.next(null);\r\n        });\r\n      } else {\r\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\r\n      }\r\n    });\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [AuthService],\n})\nexport class DynamiSocialLoginModule { }\n"],"names":[],"mappings":"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"}
