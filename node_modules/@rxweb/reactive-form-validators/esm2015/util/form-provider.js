import { Linq } from './linq';
import { ApplicationUtil } from './app-util';
import { RxFormGroup } from "../services/rx-form-group";
export class FormProvider {
    static ProcessRule(control, config, isDynamicConfig = false) {
        const formGroupValue = ApplicationUtil.getParentObjectValue(control);
        const parentObject = (control.parent) ? ApplicationUtil.cloneValue(control.parent.value) : undefined;
        let modelInstance = undefined;
        if (control.parent && control.parent instanceof RxFormGroup)
            modelInstance = control.parent.modelInstance;
        if (parentObject) {
            this.updateFormControlValue(parentObject, control.parent.controls, control, config);
            this.forDisableUpdate(parentObject, config);
        }
        else if (config.conditionalExpression)
            return false;
        return Linq.execute(formGroupValue, config, parentObject, modelInstance, isDynamicConfig);
    }
    static updateFormControlValue(parentObject, controls, control, config) {
        for (var controlName in parentObject) {
            if (!(parentObject[controlName] instanceof Object))
                if (controls[controlName] === control) {
                    parentObject[controlName] = control.value;
                    break;
                }
        }
    }
    static forDisableUpdate(parentObject, config) {
        if (config.disableConfig)
            Object.keys(config.disableConfig).forEach(column => {
                parentObject[column] = config.disableConfig[column];
            });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1mb3JtLXZhbGlkYXRvcnMvIiwic291cmNlcyI6WyJ1dGlsL2Zvcm0tcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM3QixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBSzdDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUV2RCxNQUFNLE9BQU8sWUFBWTtJQUlyQixNQUFNLENBQUMsV0FBVyxDQUFDLE9BQXVCLEVBQUMsTUFBVSxFQUFDLGtCQUEwQixLQUFLO1FBQ2pGLE1BQU0sY0FBYyxHQUFHLGVBQWUsQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyRSxNQUFNLFlBQVksR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDckcsSUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDO1FBQzlCLElBQUksT0FBTyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxZQUFZLFdBQVc7WUFDdkQsYUFBYSxHQUFpQixPQUFPLENBQUMsTUFBTyxDQUFDLGFBQWEsQ0FBQztRQUNoRSxJQUFJLFlBQVksRUFBRTtZQUNkLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3BGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUE7U0FDOUM7YUFDSSxJQUFJLE1BQU0sQ0FBQyxxQkFBcUI7WUFDakMsT0FBTyxLQUFLLENBQUM7UUFDakIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFDLGFBQWEsRUFBQyxlQUFlLENBQUMsQ0FBQztJQUM1RixDQUFDO0lBRU8sTUFBTSxDQUFDLHNCQUFzQixDQUFDLFlBQStCLEVBQUMsUUFBWSxFQUFDLE9BQXVCLEVBQUMsTUFBVTtRQUNqSCxLQUFJLElBQUksV0FBVyxJQUFJLFlBQVksRUFBQztZQUNoQyxJQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLFlBQVksTUFBTSxDQUFDO2dCQUM3QyxJQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsS0FBSyxPQUFPLEVBQUM7b0JBQ2pDLFlBQVksQ0FBQyxXQUFXLENBQUMsR0FBRSxPQUFPLENBQUMsS0FBSyxDQUFDO29CQUN6QyxNQUFNO2lCQUNUO1NBQ1I7SUFDTCxDQUFDO0lBQ08sTUFBTSxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBQyxNQUFNO1FBQy9DLElBQUksTUFBTSxDQUFDLGFBQWE7WUFDcEIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUMvQyxZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4RCxDQUFDLENBQUMsQ0FBQTtJQUNWLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGlucSB9IGZyb20gJy4vbGlucSc7XHJcbmltcG9ydCB7IEFwcGxpY2F0aW9uVXRpbCB9IGZyb20gJy4vYXBwLXV0aWwnO1xyXG5pbXBvcnQge1xyXG4gICAgQWJzdHJhY3RDb250cm9sXHJcbn0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcblxyXG5pbXBvcnQgeyBSeEZvcm1Hcm91cCB9IGZyb20gXCIuLi9zZXJ2aWNlcy9yeC1mb3JtLWdyb3VwXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtUHJvdmlkZXJ7XHJcblxyXG4gICBcclxuXHJcbiAgICBzdGF0aWMgUHJvY2Vzc1J1bGUoY29udHJvbDpBYnN0cmFjdENvbnRyb2wsY29uZmlnOmFueSxpc0R5bmFtaWNDb25maWc6Ym9vbGVhbiA9IGZhbHNlKSA6IGJvb2xlYW4gfCB7W2tleTpzdHJpbmddOmFueX0ge1xyXG4gICAgICAgIGNvbnN0IGZvcm1Hcm91cFZhbHVlID0gQXBwbGljYXRpb25VdGlsLmdldFBhcmVudE9iamVjdFZhbHVlKGNvbnRyb2wpO1xyXG4gICAgICAgIGNvbnN0IHBhcmVudE9iamVjdCA9IChjb250cm9sLnBhcmVudCkgPyBBcHBsaWNhdGlvblV0aWwuY2xvbmVWYWx1ZShjb250cm9sLnBhcmVudC52YWx1ZSkgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgbGV0IG1vZGVsSW5zdGFuY2UgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKGNvbnRyb2wucGFyZW50ICYmIGNvbnRyb2wucGFyZW50IGluc3RhbmNlb2YgUnhGb3JtR3JvdXApXHJcbiAgICAgICAgICAgIG1vZGVsSW5zdGFuY2UgPSAoPFJ4Rm9ybUdyb3VwPmNvbnRyb2wucGFyZW50KS5tb2RlbEluc3RhbmNlO1xyXG4gICAgICAgIGlmIChwYXJlbnRPYmplY3QpIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGb3JtQ29udHJvbFZhbHVlKHBhcmVudE9iamVjdCwgY29udHJvbC5wYXJlbnQuY29udHJvbHMsIGNvbnRyb2wsIGNvbmZpZyk7XHJcbiAgICAgICAgICAgIHRoaXMuZm9yRGlzYWJsZVVwZGF0ZShwYXJlbnRPYmplY3QsIGNvbmZpZylcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoY29uZmlnLmNvbmRpdGlvbmFsRXhwcmVzc2lvbilcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIHJldHVybiBMaW5xLmV4ZWN1dGUoZm9ybUdyb3VwVmFsdWUsIGNvbmZpZywgcGFyZW50T2JqZWN0LG1vZGVsSW5zdGFuY2UsaXNEeW5hbWljQ29uZmlnKTsgXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgdXBkYXRlRm9ybUNvbnRyb2xWYWx1ZShwYXJlbnRPYmplY3Q6e1trZXk6c3RyaW5nXTphbnl9LGNvbnRyb2xzOmFueSxjb250cm9sOkFic3RyYWN0Q29udHJvbCxjb25maWc6YW55KXtcclxuICAgICAgICBmb3IodmFyIGNvbnRyb2xOYW1lIGluIHBhcmVudE9iamVjdCl7XHJcbiAgICAgICAgICAgIGlmKCEocGFyZW50T2JqZWN0W2NvbnRyb2xOYW1lXSBpbnN0YW5jZW9mIE9iamVjdCkpXHJcbiAgICAgICAgICAgICAgICBpZihjb250cm9sc1tjb250cm9sTmFtZV0gPT09IGNvbnRyb2wpe1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE9iamVjdFtjb250cm9sTmFtZV09IGNvbnRyb2wudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgZm9yRGlzYWJsZVVwZGF0ZShwYXJlbnRPYmplY3QsY29uZmlnKSB7XHJcbiAgICAgICAgaWYgKGNvbmZpZy5kaXNhYmxlQ29uZmlnKVxyXG4gICAgICAgICAgICBPYmplY3Qua2V5cyhjb25maWcuZGlzYWJsZUNvbmZpZykuZm9yRWFjaChjb2x1bW4gPT4ge1xyXG4gICAgICAgICAgICAgICAgcGFyZW50T2JqZWN0W2NvbHVtbl0gPSBjb25maWcuZGlzYWJsZUNvbmZpZ1tjb2x1bW5dO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgfVxyXG59XHJcbiJdfQ==